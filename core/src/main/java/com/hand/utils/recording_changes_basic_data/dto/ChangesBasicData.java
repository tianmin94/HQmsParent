package com.hand.utils.recording_changes_basic_data.dto;

import java.util.Date;

import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * Auto Generated By Hap Code Generator
 **/

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.hand.hap.mybatis.annotation.ExtensionAttribute;
import com.hand.hap.system.dto.BaseDTO;

@ExtensionAttribute(disable = true)
@Table(name = "recording_changes_basic_data")
public class ChangesBasicData extends BaseDTO {

    public static final String FIELD_CHANGE_ID = "changeId";
    public static final String FIELD_TABLE_NAME = "tableName";
    public static final String FIELD_CHANGE_CONTENT = "changeContent";
    public static final String FIELD_CHANGE_TYPE = "changeType";


    @Id
    @GeneratedValue
    private Long changeId; //变化ID

    @NotEmpty
    @Length(max = 240)
    private String tableName; //表名

    @NotEmpty
    @Length(max = 240)
    private String changeContent; //变化内容

    @NotEmpty
    @Length(max = 240)
    private String userName; //操作人

    @NotEmpty
    @Length(max = 240)
    private String changeType; //变化类型(add/update/delete)

    private Date lastUpdateDate; //创建时间
    
    @Transient
	private String operationStartTime;// 操作日期从

	@Transient
	private String operationEndTime;// 操作期至
	
	@Transient
	private Float userId;// 用户id

    @Override
    public Date getLastUpdateDate() {
        return lastUpdateDate;
    }

    @Override
    public void setLastUpdateDate(Date lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    public ChangesBasicData() {

    }
    public ChangesBasicData(String tableName, Object changeContent, String userName, String changeType) {
        ObjectMapper objectMapper = new ObjectMapper();
        objectMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);
        String string = "";
        try {
            string = objectMapper.writeValueAsString(changeContent);
        } catch (JsonProcessingException e) {
            e.printStackTrace();
        }

        this.tableName = tableName;
        this.changeContent = string;
        this.userName = userName;
        this.changeType = changeType;
    }

    public Float getUserId() {
		return userId;
	}

	public void setUserId(Float userId) {
		this.userId = userId;
	}

	public String getOperationStartTime() {
		return operationStartTime;
	}

	public void setOperationStartTime(String operationStartTime) {
		this.operationStartTime = operationStartTime;
	}

	public String getOperationEndTime() {
		return operationEndTime;
	}

	public void setOperationEndTime(String operationEndTime) {
		this.operationEndTime = operationEndTime;
	}

	public String getUserName() {
        return userName;
    }

    public void setUserName(String userName) {

        this.userName = userName;
    }

    public void setChangeId(Long changeId) {
        this.changeId = changeId;
    }

    public Long getChangeId() {
        return changeId;
    }

    public void setTableName(String tableName) {
        this.tableName = tableName;
    }

    public String getTableName() {
        return tableName;
    }

    public void setChangeContent(String changeContent) {
        this.changeContent = changeContent;
    }

    public String getChangeContent() {
        return changeContent;
    }

    public void setChangeType(String changeType) {
        this.changeType = changeType;
    }

    public String getChangeType() {
        return changeType;
    }

}
